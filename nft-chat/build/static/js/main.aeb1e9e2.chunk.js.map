{"version":3,"sources":["NFTchatLogo.js","NFTChatABI.js","NFTMetadata.js","App.js","reportWebVitals.js","index.js"],"names":["NFTchatLogo","className","NFTchatABI","getMetaData","imgUrl","senderAdress","birthday","web3","account","lastIndexNewLine","contractAdress","mintFee","client","create","supportedNetworks","Map","set","App","props","state","show","network","MetamaskInstalled","a","this","loadWeb3","loadBlockchainData","window","ethereum","on","networkId","console","log","location","reload","currentProvider","enable","Web3","eth","getAccounts","accounts","setState","detectNetwork","net","getId","then","netId","currentNetwork","get","contract","name","fee","error","alert","e","textArea","target","htmlText","applyTextConstraints","document","getElementById","innerHTML","toAddress","value","utils","isAddress","adaptTextToImage","msgPreview","html2canvas","canvas","removeAttribute","style","removeProperty","uploadDataToIPFS","toDataURL","fileUrl","mintNFT","loading","id","maxLength","spellCheck","placeholder","onChange","onTxtChanged","onClick","onSend","Component","theText","numberOfLines","match","length","lastIndexOf","slice","replace","plainTxtToHtml","fontSize","textContent","setAttribute","imageURL","imgFile","getImageFile","uploadFileToIPFS","today","Date","toLocaleDateString","metadata","metaJson","JSON","stringify","metadataFile","File","type","fileContent","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","file","add","added","path","fileURI","getTransactionCount","nonce","amount","toWei","toHex","NFTContract","Contract","tx","toString","methods","mint","encodeABI","request","method","params","result","txHash","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aeb1e9e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NFTchatLogo() {\r\n    return <pre className=\"Title\">\r\n    <h1 >\r\n      ███    ██ ███████ ████████     ██             ██<br></br>\r\n      ████   ██ ██         ██        ██           ██████<br></br>\r\n      ██ ██  ██ █████      ██  █████ ██████ █████   ██  <br></br>\r\n      ██  ██ ██ ██         ██ ██     ██  ██ ██  ██  ██  <br></br>\r\n      ██   ████ ██         ██  █████ ██  ██ ███ ███ ████<b>.xyz</b><br></br>\r\n    </h1>\r\n  </pre>;\r\n}\r\n\r\nexport default NFTchatLogo;\r\n\r\n","export const NFTchatABI = [{\r\n        \"inputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_approved\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"_approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [{\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"CURRENT_PRICE\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"NOT_CURRENT_OWNER\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_approved\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"address\",\r\n            \"name\": \"_owner\",\r\n            \"type\": \"address\"\r\n        }],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_operator\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_uri\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"string\",\r\n            \"name\": \"_name\",\r\n            \"type\": \"string\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"address\",\r\n            \"name\": \"_owner\",\r\n            \"type\": \"address\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_data\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_operator\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"_approved\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"currentPrice\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"name\": \"setCurrentPrice\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"bytes4\",\r\n            \"name\": \"_interfaceID\",\r\n            \"type\": \"bytes4\"\r\n        }],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"string\",\r\n            \"name\": \"_symbol\",\r\n            \"type\": \"string\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n        }],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [{\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n        }],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_tokenId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [{\r\n            \"internalType\": \"address\",\r\n            \"name\": \"_newOwner\",\r\n            \"type\": \"address\"\r\n        }],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"withdraw\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    }\r\n]","export function getMetaData(imgUrl, senderAdress, birthday) {\r\n    return {\r\n        \"name\": \"nftchat.xyz\",\r\n        \"description\": `${birthday} \\n\r\nYou received this message from ${senderAdress} \\n\r\nTo reply visit nftchat.xyz`,\r\n        \"image\": `${imgUrl}`,\r\n        \"attributes\": [{\r\n            \"display_type\": \"date\",\r\n            \"trait_type\": \"Message Date\",\r\n            \"value\": `${birthday}`\r\n        }]\r\n    }\r\n}","/* src/App.js */\r\nimport './App.css'\r\nimport { create } from 'ipfs-http-client'\r\nimport html2canvas from 'html2canvas'\r\nimport Web3 from 'web3'\r\nimport Contract from 'web3-eth-contract'\r\nimport React, { Component } from 'react'\r\nimport NFTchatLogo from './NFTchatLogo'\r\nimport { NFTchatABI } from \"./NFTChatABI\";\r\nimport { getMetaData } from \"./NFTMetadata\";\r\n\r\nconst client = create('https://ipfs.infura.io:5001/api/v0')\r\nlet web3;\r\nlet account;\r\nlet lastIndexNewLine;\r\nlet contractAdress;\r\nlet mintFee;\r\n\r\nconst supportedNetworks = new Map();\r\n//MAIN NETS\r\nsupportedNetworks.set(1, { \"name\": 'Ethereum Mainnet', \"contract\": '', \"fee\": \"0.000044\" });\r\nsupportedNetworks.set(56, { \"name\": 'Binance Smart Chain', \"contract\": '', \"fee\": '0.00033' });\r\n//TEST NETS\r\nsupportedNetworks.set(3, { \"name\": 'Ropsten Test Network', \"contract\": '0xd4998884A7e335d996F17fFD6e17199a28BfcD82', \"fee\": \"0.000044\" });//GAS  2652351  //TX gas 80000000\r\nsupportedNetworks.set(4, { \"name\": 'Rinkeby Test Network', \"contract\": '', \"fee\": \"0.000044\" });\r\nsupportedNetworks.set(137, { \"name\": 'Polygon', \"contract\": '', \"fee\": '0.099' });\r\nsupportedNetworks.set(80001, { \"name\": 'Mumbai', \"contract\": '0x9BfFF2632373fC47EFEb69d6eEB7cF651f22A0bF', \"fee\": '0.005' });\r\nsupportedNetworks.set(97, { \"name\": 'BSC Tesnet', \"contract\": '0x9BfFF2632373fC47EFEb69d6eEB7cF651f22A0bF', \"fee\": '0.000033' });\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      show: false,\r\n      network: '',\r\n      MetamaskInstalled: false\r\n    }\r\n  }\r\n\r\n  //lifecycle function componenet\r\n  async componentDidMount() {\r\n    await this.loadWeb3()\r\n    if (this.state.show === false) {\r\n      await this.loadBlockchainData()\r\n      // detect Network account change\r\n      window.ethereum.on('chainChanged', function (networkId) {\r\n        console.log('networkChanged', networkId)\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    await window.web3.currentProvider.enable();\r\n    web3 = new Web3(window.web3.currentProvider);\r\n    const accounts = await web3.eth.getAccounts()\r\n    account = accounts[0]\r\n    this.setState({ account: account })\r\n    this.detectNetwork(web3)\r\n  }\r\n\r\n  //detect the Network \r\n  async detectNetwork(web3) {\r\n    web3.eth.net.getId().then(netId => {\r\n      const currentNetwork = supportedNetworks.get(netId);\r\n      if (!currentNetwork || !currentNetwork.contract) {\r\n        console.error('Unsupported network.')\r\n        window.alert('Unsupported Network, please change the blockchain network on your wallet')\r\n      } else {\r\n        this.setState({ network: currentNetwork.name })\r\n        console.log(`Connected to ${currentNetwork.name} Network`)\r\n\r\n        contractAdress = currentNetwork.contract;\r\n        console.log(\"contract address: \", contractAdress);\r\n\r\n        mintFee = currentNetwork.fee;\r\n        console.log(\"Mint fee: \", mintFee);\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  async loadWeb3() {\r\n    console.log('loading web3...')\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      this.setState({ MetamaskInstalled: true })\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      this.setState({ show: true })\r\n    }\r\n  }\r\n\r\n  async onTxtChanged(e) {\r\n    const textArea = e.target;\r\n    const htmlText = applyTextConstraints(textArea)\r\n\r\n    let msgPreview = document.getElementById('msgPreview');\r\n    msgPreview.innerHTML = htmlText;\r\n  }\r\n\r\n  async onSend(e) {\r\n    const toAddress = document.getElementById('toAddress').value;\r\n    if (web3.utils.isAddress(toAddress)) {\r\n      console.log(\"sending msg...\")\r\n      const msgPreview = document.getElementById('msgPreview');\r\n      adaptTextToImage(msgPreview)\r\n      html2canvas(msgPreview)\r\n        .then(canvas => {\r\n          msgPreview.removeAttribute(\"class\", \"nftImg\");\r\n          msgPreview.style.removeProperty(\"font-size\")\r\n          uploadDataToIPFS(canvas.toDataURL(\"image/png\"))\r\n            .then((fileUrl) => { mintNFT(fileUrl, toAddress) })\r\n        })\r\n    } else {\r\n      alert(\"Invalid receiver address\")\r\n    }\r\n  }\r\n\r\n  async App() {\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NFTchatLogo></NFTchatLogo>\r\n        <input id=\"toAddress\" className=\"ToAddress\" maxLength=\"42\" spellCheck=\"false\" placeholder=\"Paste the receiver address here...\"></input>\r\n        <textarea className=\"TextArea\" id=\"the_text\" maxLength=\"666\" spellCheck=\"false\" placeholder=\"Write your message here...\" onChange={this.onTxtChanged} />\r\n        <div id=\"previewContainer\">\r\n          <div id=\"msgPreview\">  -- NFT message preview --  </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"clientInfo\">\r\n            <b>Sender Address:</b> {this.state.account}\r\n            <br></br>\r\n            <b>Network:</b> {this.state.network}\r\n          </div>\r\n          <button className=\"MyButton\" onClick={this.onSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\nfunction applyTextConstraints(textArea) {\r\n  let theText = textArea.value;\r\n  const numberOfLines = (theText.match(/\\n\\r?/g) || []).length + 1\r\n\r\n  if (numberOfLines >= 10) {\r\n    if (numberOfLines < 11) {\r\n      lastIndexNewLine = theText.lastIndexOf('\\n');\r\n    }\r\n    theText = theText.slice(0, lastIndexNewLine)\r\n    textArea.value = theText\r\n  }\r\n  return plainTxtToHtml(theText);\r\n}\r\n\r\nfunction plainTxtToHtml(theText) {\r\n  return theText\r\n    .replace(/\\t/g, '    ')\r\n    .replace(/ {2}/g, '&nbsp; ')\r\n    .replace(/ {2}/g, ' &nbsp;')\r\n    .replace(/\\n\\r?/g, '<br>')\r\n}\r\n\r\nfunction adaptTextToImage(msgPreview) {\r\n  const length = msgPreview.textContent.length\r\n  const maxSize = 10\r\n  const minSize = 2.6\r\n  let fontSize = 100 / length\r\n  if (fontSize > maxSize) {\r\n    fontSize = maxSize\r\n  } else if (fontSize < minSize) {\r\n    fontSize = minSize\r\n  }\r\n  msgPreview.setAttribute(\"class\", \"nftImg\")\r\n  msgPreview.style.fontSize = `${fontSize}vh`\r\n  console.log(\"fontSize\", fontSize)\r\n}\r\n\r\nasync function uploadDataToIPFS(imageURL) {\r\n  const imgFile = getImageFile(imageURL)\r\n  const imgUrl = await uploadFileToIPFS(imgFile)\r\n  console.log(\"IMAGE IPFS\", imgUrl)\r\n  const today = new Date().toLocaleDateString(\"en-US\")\r\n  const metadata = getMetaData(imgUrl, account, today)\r\n  const metaJson = JSON.stringify(metadata)\r\n  const metadataFile = new File([metaJson], 'metadata.json', { type: 'text/plain;charset=UTF-8' })\r\n  const fileUrl = await uploadFileToIPFS(metadataFile)\r\n  console.log(\"IPFS File URL:\", fileUrl)\r\n  return fileUrl;\r\n}\r\n\r\nfunction getImageFile(fileContent) {\r\n  const arr = fileContent.split(',')\r\n  const mime = arr[0].match(/:(.*?);/)[1]\r\n  const bstr = atob(arr[1])\r\n  let n = bstr.length\r\n  let u8arr = new Uint8Array(n)\r\n\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n)\r\n  }\r\n\r\n  const imgFile = new File([u8arr], 'filename.png', { type: mime })\r\n  return imgFile;\r\n}\r\n\r\nasync function uploadFileToIPFS(file) {\r\n  let fileUrl;\r\n  try {\r\n    const added = await client.add(file)\r\n    fileUrl = `https://ipfs.infura.io/ipfs/${added.path}`\r\n  } catch (error) {\r\n    console.log('Error uploading file: ', error)\r\n  }\r\n  return fileUrl\r\n}\r\n\r\nasync function mintNFT(fileURI, toAddress) {\r\n  const nonce = await web3.eth.getTransactionCount(account, 'latest');\r\n  //the transaction\r\n  const amount = web3.utils.toWei(mintFee, 'ether');\r\n  const value = web3.utils.toHex(amount);\r\n  const NFTContract = new Contract(NFTchatABI, contractAdress)\r\n\r\n\r\n  //GAS  2652351  //TX gas 80000000\r\n\r\n  const tx = {\r\n    'from': account.toString(),\r\n    'to': contractAdress,\r\n    'nonce': nonce.toString(),\r\n    //TODO define gas for different blockchains\r\n    //'gas': '200000', //MATIC\r\n    'gas': '300000', //ETH\r\n    //TODO define maxPriorityFeePerGas\r\n    'maxPriorityFeePerGas': '5000000',\r\n    'data': NFTContract.methods.mint(toAddress, fileURI).encodeABI(),\r\n    // da gestire con BigNumber\r\n    'value': value\r\n  };\r\n\r\n  console.log(tx)\r\n\r\n  const txHash = await window.ethereum\r\n    .request({\r\n      method: 'eth_sendTransaction',\r\n      params: [tx],\r\n    })\r\n    .then((result) => {\r\n      console.log(\"Transaction hash:\", txHash)\r\n      console.log(\"Transaction Result:\", result)\r\n    })\r\n    .catch((error) => {\r\n      console.error(error)\r\n    });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}